.table {
  background: map-get($colored-table, 'bg');
  color: map-get($colored-table, 'color');
  thead tr th {
    background-color: map-get($colored-table, 'header-bg');
    color: map-get($colored-table, 'header-color');
  }
  thead tr th.selected {
    background-color: map-get($colored-table, 'header-highlighted-bg');
    color: map-get($colored-table, 'header-highlighted-color');
  }
  tbody tr td.selected {
    background-color: map-get($colored-table, 'row-highlighted-bg');
    color: map-get($colored-table, 'row-highlighted-color');
  }
}
.is-not-touch-device .table .view .btn-dropdown-toggle:hover {
  background-color: #7dbe31;
  border-color: #7dbe31;
  & > li > a:hover {
    background-color: #d0e8af;
  }
}
.table > thead > tr > td.info,
.table > tbody > tr > td.info,
.table > tfoot > tr > td.info,
.table > thead > tr > th.info,
.table > tbody > tr > th.info,
.table > tfoot > tr > th.info,
.table > thead > tr.info > td,
.table > tbody > tr.info > td,
.table > tfoot > tr.info > td,
.table > thead > tr.info > th,
.table > tbody > tr.info > th,
.table > tfoot > tr.info > th,
.table > tbody > tr.info {
  background-color: map-get($colored-table, 'row-hover-bg') !important;
  color: map-get($colored-table, 'row-hover-color') !important;
}

.table-striped {
  background-color: map-get($colored-table, 'row-bg');
  color: map-get($colored-table, 'row-color');
  tbody {
    tr {
      &:nth-of-type(odd) {
        background-color: map-get($colored-table, 'row-odd-bg');
        color: map-get($colored-table, 'row-odd-color');
      }
    }
  }
  thead > tr:nth-of-type(odd) > td.info,
  tbody > tr:nth-of-type(odd) > td.info,
  tfoot > tr:nth-of-type(odd) > td.info,
  thead > tr:nth-of-type(odd) > th.info,
  tbody > tr:nth-of-type(odd) > th.info,
  tfoot > tr:nth-of-type(odd) > th.info,
  thead > tr:nth-of-type(odd).info > td,
  tbody > tr:nth-of-type(odd).info > td,
  tfoot > tr:nth-of-type(odd).info > td,
  thead > tr:nth-of-type(odd).info > th,
  tbody > tr:nth-of-type(odd).info > th,
  tfoot > tr:nth-of-type(odd).info > th,
  tbody > tr:nth-of-type(odd).info {
    background-color: map-get($colored-table, 'row-odd-hover-bg') !important;
    color: map-get($colored-table, 'row-odd-hover-color') !important;
  }
}
.table-striped.table-hover {
  background: map-get($colored-table, 'row-bg');
  color: map-get($colored-table, 'row-color');
  tbody {
    tr {
      &:hover td[data-table-hover],
      &.hovered td[data-table-hover] {
        background: map-get($colored-table, 'row-hover-bg');
        color: map-get($colored-table, 'row-hover-color');
      }
    }
    tr:nth-of-type(odd) {
      &:hover td[data-table-hover],
      &.hovered td[data-table-hover] {
        background: map-get($colored-table, 'row-odd-hover-bg');
        color: map-get($colored-table, 'row-odd-hover-color');
      }
    }
  }
}

.is-not-touch-device .table-hover > tbody > tr > td.info:hover,
.is-not-touch-device .table-hover > tbody > tr > th.info:hover,
.is-not-touch-device .table-hover > tbody > tr.info:hover > td,
.is-not-touch-device .table-hover > tbody > tr:hover > .info,
.is-not-touch-device .table-hover > tbody > tr.info:hover > th,
.is-not-touch-device .table-hover > tbody > tr[ng-click]:hover > td,
.is-not-touch-device .table-hover > tbody > tr:hover > td[ng-click],
.is-not-touch-device .table-hover > tbody > tr[ng-click]:hover,
.is-not-touch-device .table-hover > tbody > tr.hovered {
  background: map-get($colored-table, 'row-hover-bg');
  color: map-get($colored-table, 'row-hover-color');
}

.table-bordered {
  border-collapse: separate;
  border: map-get($colored-table, 'border-width') solid map-get($colored-table, 'border-color');
  thead tr th,
  tbody tr td {
    border: none;
    @include respond-from(xs) {
      border-left: map-get($colored-table, 'border-width') solid map-get($colored-table, 'border-color');
      &:first-child { border-left: none; }
    }
  }
}
.table-schedule {
  thead tr th,
  tbody tr td {
    border-left: map-get($colored-table, 'border-width') solid map-get($colored-table, 'border-color');
    &:first-child { border-left: none; }
  }
}

@include respond-from(xs) {
  .table-sorted {
    thead tr th {
      &.sorted {
        background-color: map-get($colored-table, 'header-highlighted-bg');
        color: map-get($colored-table, 'header-highlighted-color');
        &.asc:after {
          border-color: #303030 transparent transparent;
        }
        &.desc:after {
          border-color: transparent transparent #303030;
        }
      }
    }
    tbody tr td.sorted {
      background: map-get($colored-table, 'row-sorted-bg');
      color: map-get($colored-table, 'row-sorted-color');
    }
    &.table-striped {
      tbody {
        tr:nth-of-type(odd) td.sorted {
          background: map-get($colored-table, 'row-sorted-odd-bg');
          color: map-get($colored-table, 'row-sorted-odd-color');
        }
      }
    }
    &.table-striped.table-hover {
      tbody {
        tr.hovered td.sorted,
        tr:hover td.sorted {
          background: map-get($colored-table, 'row-sorted-odd-hover-bg');
          color: map-get($colored-table, 'row-sorted-odd-hover-color');
        }
      }
    }
  }
}